name: CI - Integration Test 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  schedule:
    - cron: '55 21 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ${{ matrix.os}}
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]

    steps:
    # Steps represent a sequence of tasks that will be executed as part of the job
    - name: Set up credentials (Linux and MacOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      env:
        USERNAME: ${{ secrets.REASK_API_USERNAME }}
        PASSWORD: ${{ secrets.REASK_API_PASSWORD }}
      run: |
        echo "[default]" > ~/.reask
        echo "username = ${USERNAME}" >> ~/.reask
        echo "password = ${PASSWORD}" >> ~/.reask
        chmod 600 ~/.reask

    - name: Git checkout 
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run pytests
      run: |
        cd tests
        pytest -vs
    
    - name: Post notification to slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: ${{ env.SLACK_CHANNEL_ID }}
        payload: |
          {
            "text": "GitHub Action build result: ${{ job.status }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Daily CI execution for Python version ${{ matrix.python-version }} on ${{ matrix.os }}: ${{ job.status }}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}